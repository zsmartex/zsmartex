// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/zsmartex/zsmartex/ent/code"
	"github.com/zsmartex/zsmartex/ent/schema"
	"github.com/zsmartex/zsmartex/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	codeFields := schema.Code{}.Fields()
	_ = codeFields
	// codeDescUpdatedAt is the schema descriptor for updated_at field.
	codeDescUpdatedAt := codeFields[11].Descriptor()
	// code.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	code.DefaultUpdatedAt = codeDescUpdatedAt.Default.(func() time.Time)
	// code.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	code.UpdateDefaultUpdatedAt = codeDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[6].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
