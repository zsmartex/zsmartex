// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CodesColumns holds the columns for the "codes" table.
	CodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "code", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"unknown", "email", "phone"}, Default: "unknown"},
		{Name: "category", Type: field.TypeEnum, Enums: []string{"unknown", "register", "reset_password", "login"}, Default: "unknown"},
		{Name: "email_index", Type: field.TypeInt64, Nullable: true},
		{Name: "email_encrypted", Type: field.TypeString, Nullable: true},
		{Name: "phone_index", Type: field.TypeInt64, Nullable: true},
		{Name: "phone_encrypted", Type: field.TypeString, Nullable: true},
		{Name: "data", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CodesTable holds the schema information for the "codes" table.
	CodesTable = &schema.Table{
		Name:       "codes",
		Columns:    CodesColumns,
		PrimaryKey: []*schema.Column{CodesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "uid", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"member", "admin"}, Default: "member"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_uid",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[2]},
			},
			{
				Name:    "user_role",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CodesTable,
		UsersTable,
	}
)

func init() {
}
